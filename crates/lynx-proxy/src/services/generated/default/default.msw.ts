/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * utoipa-axum
 * Utoipa's axum bindings for seamless integration for the two
 * OpenAPI spec version: 0.2.0
 */
import { faker } from '@faker-js/faker';

import { HttpResponse, delay, http } from 'msw';

export const getGetHealthResponseMock = (): string => faker.word.sample();

export const getGetHealthMockHandler = (
  overrideResponse?:
    | string
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0],
      ) => Promise<string> | string),
) => {
  return http.get('*/health', async (info) => {
    await delay(1000);

    return new HttpResponse(getGetHealthResponseMock(), {
      status: 200,
      headers: { 'Content-Type': 'text/plain' },
    });
  });
};
export const getDefaultMock = () => [getGetHealthMockHandler()];
